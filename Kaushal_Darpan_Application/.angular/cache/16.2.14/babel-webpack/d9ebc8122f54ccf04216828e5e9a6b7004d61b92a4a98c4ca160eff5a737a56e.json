{"ast":null,"code":"import _asyncToGenerator from \"D:/Projects/Kaushal_Darpan_App/Kaushal_Darpan_Application/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../Common/appsetting.service\";\nexport class SSOLoginService {\n  constructor(http, appsettingConfig) {\n    this.http = http;\n    this.appsettingConfig = appsettingConfig;\n    this.APIUrl = this.appsettingConfig.apiURL + \"SSO\";\n  }\n  extractData(res) {\n    return res;\n  }\n  handleErrorObservable(error) {\n    return throwError(error);\n  }\n  GetSSOUserDetails(SearchRecordID) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const headers = {\n        'content-type': 'application/json'\n      };\n      return yield _this.http.get(_this.APIUrl + '/GetSSOUserDetails/' + SearchRecordID, {\n        'headers': headers,\n        observe: 'response'\n      }).pipe(catchError(_this.handleErrorObservable)).toPromise();\n    })();\n  }\n  Login(SSOID, Password) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const headers = {\n        'content-type': 'application/json'\n      };\n      return yield _this2.http.get(_this2.APIUrl + '/Login/' + SSOID + \"/\" + Password, {\n        'headers': headers,\n        observe: 'response'\n      }).pipe(catchError(_this2.handleErrorObservable)).toPromise();\n    })();\n  }\n  GetSSOUserLogionDetails(sSOLandingDataDataModel) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const headers = {\n        'content-type': 'application/json'\n      };\n      const body = JSON.stringify(sSOLandingDataDataModel);\n      return yield _this3.http.post(_this3.APIUrl + '/GetSSOUserLogionDetails/', body, {\n        'headers': headers\n      }).pipe(catchError(_this3.handleErrorObservable)).toPromise();\n    })();\n  }\n  CheckMappingSSOID(SSOID) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const headers = {\n        'content-type': 'application/json'\n      };\n      return yield _this4.http.get(_this4.APIUrl + '/CheckMappingSSOID/' + SSOID, {\n        'headers': headers\n      }).pipe(catchError(_this4.handleErrorObservable)).toPromise();\n    })();\n  }\n  static #_ = this.ɵfac = function SSOLoginService_Factory(t) {\n    return new (t || SSOLoginService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AppsettingService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SSOLoginService,\n    factory: SSOLoginService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["throwError","catchError","SSOLoginService","constructor","http","appsettingConfig","APIUrl","apiURL","extractData","res","handleErrorObservable","error","GetSSOUserDetails","SearchRecordID","_this","_asyncToGenerator","headers","get","observe","pipe","toPromise","Login","SSOID","Password","_this2","GetSSOUserLogionDetails","sSOLandingDataDataModel","_this3","body","JSON","stringify","post","CheckMappingSSOID","_this4","_","i0","ɵɵinject","i1","HttpClient","i2","AppsettingService","_2","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\Kaushal_Darpan_App\\Kaushal_Darpan_Application\\src\\app\\Services\\SSOLogin\\ssologin.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { SSOLandingDataDataModel } from '../../Models/SSOLoginDataModel';\r\nimport { AppsettingService } from '../../Common/appsetting.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SSOLoginService {\r\n  readonly APIUrl = this.appsettingConfig.apiURL + \"SSO\";\r\n  constructor(private http: HttpClient, private appsettingConfig: AppsettingService) { }\r\n  extractData(res: Response) {\r\n    return res;\r\n  }\r\n  handleErrorObservable(error: Response | any) {\r\n    return throwError(error);\r\n  }\r\n\r\n  public async GetSSOUserDetails(SearchRecordID: string) {\r\n    const headers = { 'content-type': 'application/json' }\r\n    return await this.http.get(this.APIUrl + '/GetSSOUserDetails/' + SearchRecordID, { 'headers': headers, observe: 'response' })\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n   \r\n  public async Login(SSOID: string, Password: string) {\r\n    const headers = { 'content-type': 'application/json' } \r\n    return await this.http.get(this.APIUrl + '/Login/' + SSOID + \"/\" + Password, { 'headers': headers, observe: 'response' })\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n\r\n\r\n  public async GetSSOUserLogionDetails(sSOLandingDataDataModel: SSOLandingDataDataModel) {\r\n    const headers = { 'content-type': 'application/json' }\r\n    const body = JSON.stringify(sSOLandingDataDataModel);\r\n    return await this.http.post(this.APIUrl + '/GetSSOUserLogionDetails/', body, { 'headers': headers })\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n  public async CheckMappingSSOID(SSOID: string) {\r\n    const headers = { 'content-type': 'application/json' }\r\n    return await this.http.get(this.APIUrl + '/CheckMappingSSOID/' + SSOID, { 'headers': headers })\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n}\r\n"],"mappings":";AAEA,SAASA,UAAU,QAAQ,MAAM;AACjC,SAASC,UAAU,QAAQ,gBAAgB;;;;AAQ3C,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAgB,EAAUC,gBAAmC;IAA7D,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,gBAAgB,GAAhBA,gBAAgB;IADrD,KAAAC,MAAM,GAAG,IAAI,CAACD,gBAAgB,CAACE,MAAM,GAAG,KAAK;EAC+B;EACrFC,WAAWA,CAACC,GAAa;IACvB,OAAOA,GAAG;EACZ;EACAC,qBAAqBA,CAACC,KAAqB;IACzC,OAAOX,UAAU,CAACW,KAAK,CAAC;EAC1B;EAEaC,iBAAiBA,CAACC,cAAsB;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACnD,MAAMC,OAAO,GAAG;QAAE,cAAc,EAAE;MAAkB,CAAE;MACtD,aAAaF,KAAI,CAACV,IAAI,CAACa,GAAG,CAACH,KAAI,CAACR,MAAM,GAAG,qBAAqB,GAAGO,cAAc,EAAE;QAAE,SAAS,EAAEG,OAAO;QAAEE,OAAO,EAAE;MAAU,CAAE,CAAC,CAC1HC,IAAI,CACHlB,UAAU,CAACa,KAAI,CAACJ,qBAAqB,CAAC,CACvC,CAACU,SAAS,EAAE;IAAC;EAClB;EAEaC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IAAA,IAAAC,MAAA;IAAA,OAAAT,iBAAA;MAChD,MAAMC,OAAO,GAAG;QAAE,cAAc,EAAE;MAAkB,CAAE;MACtD,aAAaQ,MAAI,CAACpB,IAAI,CAACa,GAAG,CAACO,MAAI,CAAClB,MAAM,GAAG,SAAS,GAAGgB,KAAK,GAAG,GAAG,GAAGC,QAAQ,EAAE;QAAE,SAAS,EAAEP,OAAO;QAAEE,OAAO,EAAE;MAAU,CAAE,CAAC,CACtHC,IAAI,CACHlB,UAAU,CAACuB,MAAI,CAACd,qBAAqB,CAAC,CACvC,CAACU,SAAS,EAAE;IAAC;EAClB;EAGaK,uBAAuBA,CAACC,uBAAgD;IAAA,IAAAC,MAAA;IAAA,OAAAZ,iBAAA;MACnF,MAAMC,OAAO,GAAG;QAAE,cAAc,EAAE;MAAkB,CAAE;MACtD,MAAMY,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACJ,uBAAuB,CAAC;MACpD,aAAaC,MAAI,CAACvB,IAAI,CAAC2B,IAAI,CAACJ,MAAI,CAACrB,MAAM,GAAG,2BAA2B,EAAEsB,IAAI,EAAE;QAAE,SAAS,EAAEZ;MAAO,CAAE,CAAC,CACjGG,IAAI,CACHlB,UAAU,CAAC0B,MAAI,CAACjB,qBAAqB,CAAC,CACvC,CAACU,SAAS,EAAE;IAAC;EAClB;EACaY,iBAAiBA,CAACV,KAAa;IAAA,IAAAW,MAAA;IAAA,OAAAlB,iBAAA;MAC1C,MAAMC,OAAO,GAAG;QAAE,cAAc,EAAE;MAAkB,CAAE;MACtD,aAAaiB,MAAI,CAAC7B,IAAI,CAACa,GAAG,CAACgB,MAAI,CAAC3B,MAAM,GAAG,qBAAqB,GAAGgB,KAAK,EAAE;QAAE,SAAS,EAAEN;MAAO,CAAE,CAAC,CAC5FG,IAAI,CACHlB,UAAU,CAACgC,MAAI,CAACvB,qBAAqB,CAAC,CACvC,CAACU,SAAS,EAAE;IAAC;EAClB;EAAC,QAAAc,CAAA,G;qBAzCUhC,eAAe,EAAAiC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,iBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfvC,eAAe;IAAAwC,OAAA,EAAfxC,eAAe,CAAAyC,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}