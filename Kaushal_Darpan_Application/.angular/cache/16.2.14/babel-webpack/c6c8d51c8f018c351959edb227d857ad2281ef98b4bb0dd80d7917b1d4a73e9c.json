{"ast":null,"code":"import _asyncToGenerator from \"D:/Projects/Kaushal_Darpan_App/Kaushal_Darpan_Application/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../Common/appsetting.service\";\nexport class HomeService {\n  constructor(http, appsettingConfig) {\n    this.http = http;\n    this.appsettingConfig = appsettingConfig;\n    this.APIUrl = this.appsettingConfig.apiURL + \"CampusDetailsWeb\";\n    this.headersOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      })\n    };\n  }\n  extractData(res) {\n    return res;\n  }\n  handleErrorObservable(error) {\n    return throwError(error);\n  }\n  //Get all data\n  GetAllPost(postId = 0) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return yield _this.http.get(`${_this.APIUrl}/GetAllPost/${postId}`, _this.headersOptions).pipe(catchError(_this.handleErrorObservable)).toPromise();\n    })();\n  }\n  //Get all placement company\n  GetAllPlacementCompany() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return yield _this2.http.get(`${_this2.APIUrl}/GetAllPlacementCompany/`, _this2.headersOptions).pipe(catchError(_this2.handleErrorObservable)).toPromise();\n    })();\n  }\n  static #_ = this.ɵfac = function HomeService_Factory(t) {\n    return new (t || HomeService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AppsettingService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HomeService,\n    factory: HomeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","catchError","throwError","HomeService","constructor","http","appsettingConfig","APIUrl","apiURL","headersOptions","headers","localStorage","getItem","extractData","res","handleErrorObservable","error","GetAllPost","postId","_this","_asyncToGenerator","get","pipe","toPromise","GetAllPlacementCompany","_this2","_","i0","ɵɵinject","i1","HttpClient","i2","AppsettingService","_2","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\Kaushal_Darpan_App\\Kaushal_Darpan_Application\\src\\app\\Services\\Home\\home.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { GlobalConstants } from '../../Common/GlobalConstants';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, throwError } from 'rxjs';\r\nimport { AppsettingService } from '../../Common/appsetting.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HomeService {\r\n\r\n  readonly APIUrl = this.appsettingConfig.apiURL + \"CampusDetailsWeb\";\r\n  readonly headersOptions: any;\r\n  constructor(private http: HttpClient, private appsettingConfig: AppsettingService) {\r\n    this.headersOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n      })\r\n    };\r\n  }\r\n\r\n  extractData(res: Response) {\r\n    return res;\r\n  }\r\n\r\n  handleErrorObservable(error: Response | any) {\r\n    return throwError(error);\r\n  }\r\n\r\n  //Get all data\r\n  public async GetAllPost(postId: number = 0) {\r\n    return await this.http.get(`${this.APIUrl}/GetAllPost/${postId}`, this.headersOptions)\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n\r\n  //Get all placement company\r\n  public async GetAllPlacementCompany() {\r\n    return await this.http.get(`${this.APIUrl}/GetAllPlacementCompany/`, this.headersOptions)\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n}\r\n"],"mappings":";AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,UAAU,EAAEC,UAAU,QAAQ,MAAM;;;;AAM7C,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB,EAAUC,gBAAmC;IAA7D,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAFrD,KAAAC,MAAM,GAAG,IAAI,CAACD,gBAAgB,CAACE,MAAM,GAAG,kBAAkB;IAGjE,IAAI,CAACC,cAAc,GAAG;MACpBC,OAAO,EAAE,IAAIV,WAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAAS,GAAGW,YAAY,CAACC,OAAO,CAAC,WAAW;OAC9D;KACF;EACH;EAEAC,WAAWA,CAACC,GAAa;IACvB,OAAOA,GAAG;EACZ;EAEAC,qBAAqBA,CAACC,KAAqB;IACzC,OAAOd,UAAU,CAACc,KAAK,CAAC;EAC1B;EAEA;EACaC,UAAUA,CAACC,MAAA,GAAiB,CAAC;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACxC,aAAaD,KAAI,CAACd,IAAI,CAACgB,GAAG,CAAC,GAAGF,KAAI,CAACZ,MAAM,eAAeW,MAAM,EAAE,EAAEC,KAAI,CAACV,cAAc,CAAC,CACnFa,IAAI,CACHrB,UAAU,CAACkB,KAAI,CAACJ,qBAAqB,CAAC,CACvC,CAACQ,SAAS,EAAE;IAAC;EAClB;EAEA;EACaC,sBAAsBA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAL,iBAAA;MACjC,aAAaK,MAAI,CAACpB,IAAI,CAACgB,GAAG,CAAC,GAAGI,MAAI,CAAClB,MAAM,0BAA0B,EAAEkB,MAAI,CAAChB,cAAc,CAAC,CACtFa,IAAI,CACHrB,UAAU,CAACwB,MAAI,CAACV,qBAAqB,CAAC,CACvC,CAACQ,SAAS,EAAE;IAAC;EAClB;EAAC,QAAAG,CAAA,G;qBAnCUvB,WAAW,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,iBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX9B,WAAW;IAAA+B,OAAA,EAAX/B,WAAW,CAAAgC,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}