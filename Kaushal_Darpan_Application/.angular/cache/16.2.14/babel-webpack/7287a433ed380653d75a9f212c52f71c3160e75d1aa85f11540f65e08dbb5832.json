{"ast":null,"code":"import _asyncToGenerator from \"D:/Projects/Kaushal_Darpan_App/Kaushal_Darpan_Application/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../Common/appsetting.service\";\n//import { CollegeMasteDataModels } from '../../Models/CollegeMasterDataModels';\nexport class ViewPlacedStudentService {\n  constructor(http, appsettingConfig) {\n    this.http = http;\n    this.appsettingConfig = appsettingConfig;\n    this.APIUrl = this.appsettingConfig.apiURL + \"ViewPlacedStudent\";\n    this.headersOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      })\n    };\n  }\n  extractData(res) {\n    return res;\n  }\n  handleErrorObservable(error) {\n    return throwError(error);\n  }\n  GetAllData(Pk_Id, key) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const body = JSON.stringify({\n        Pk_Id,\n        key\n      }); // Create an object with both values\n      return yield _this.http.post(`${_this.APIUrl}/GetAllData`, body, _this.headersOptions).pipe(catchError(_this.handleErrorObservable)).toPromise();\n    })();\n  }\n  static #_ = this.ɵfac = function ViewPlacedStudentService_Factory(t) {\n    return new (t || ViewPlacedStudentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AppsettingService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ViewPlacedStudentService,\n    factory: ViewPlacedStudentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","catchError","throwError","ViewPlacedStudentService","constructor","http","appsettingConfig","APIUrl","apiURL","headersOptions","headers","localStorage","getItem","extractData","res","handleErrorObservable","error","GetAllData","Pk_Id","key","_this","_asyncToGenerator","body","JSON","stringify","post","pipe","toPromise","_","i0","ɵɵinject","i1","HttpClient","i2","AppsettingService","_2","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\Kaushal_Darpan_App\\Kaushal_Darpan_Application\\src\\app\\Services\\ViewPlacedStudent\\View-placed-student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { GlobalConstants } from '../../Common/GlobalConstants';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, throwError } from 'rxjs';\r\nimport { CollegeMasterDataModels } from '../../Models/CollegeMasterDataModels';\r\nimport { PlacementReportSearchModels } from '../../Models/PlacementDashReportModel';\r\nimport { AppsettingService } from '../../Common/appsetting.service';\r\n//import { CollegeMasteDataModels } from '../../Models/CollegeMasterDataModels';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ViewPlacedStudentService {\r\n\r\n  readonly APIUrl = this.appsettingConfig.apiURL + \"ViewPlacedStudent\";\r\n  readonly headersOptions: any;\r\n  constructor(private http: HttpClient, private appsettingConfig: AppsettingService) {\r\n    this.headersOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n      })\r\n    };\r\n  }\r\n  extractData(res: Response) {\r\n    return res;\r\n  }\r\n  handleErrorObservable(error: Response | any) {\r\n    return throwError(error);\r\n  }\r\n  public async GetAllData(Pk_Id: number, key: number) {\r\n    const body = JSON.stringify({ Pk_Id, key }); // Create an object with both values\r\n\r\n\r\n    return await this.http.post(`${this.APIUrl}/GetAllData`, body, this.headersOptions)\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n\r\n}\r\n"],"mappings":";AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,UAAU,EAAEC,UAAU,QAAQ,MAAM;;;;AAI7C;AAMA,OAAM,MAAOC,wBAAwB;EAInCC,YAAoBC,IAAgB,EAAUC,gBAAmC;IAA7D,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAFrD,KAAAC,MAAM,GAAG,IAAI,CAACD,gBAAgB,CAACE,MAAM,GAAG,mBAAmB;IAGlE,IAAI,CAACC,cAAc,GAAG;MACpBC,OAAO,EAAE,IAAIV,WAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAAS,GAAGW,YAAY,CAACC,OAAO,CAAC,WAAW;OAC9D;KACF;EACH;EACAC,WAAWA,CAACC,GAAa;IACvB,OAAOA,GAAG;EACZ;EACAC,qBAAqBA,CAACC,KAAqB;IACzC,OAAOd,UAAU,CAACc,KAAK,CAAC;EAC1B;EACaC,UAAUA,CAACC,KAAa,EAAEC,GAAW;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAChD,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;QAAEN,KAAK;QAAEC;MAAG,CAAE,CAAC,CAAC,CAAC;MAG7C,aAAaC,KAAI,CAACf,IAAI,CAACoB,IAAI,CAAC,GAAGL,KAAI,CAACb,MAAM,aAAa,EAAEe,IAAI,EAAEF,KAAI,CAACX,cAAc,CAAC,CAChFiB,IAAI,CACHzB,UAAU,CAACmB,KAAI,CAACL,qBAAqB,CAAC,CACvC,CAACY,SAAS,EAAE;IAAC;EAClB;EAAC,QAAAC,CAAA,G;qBA1BUzB,wBAAwB,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,iBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAxBhC,wBAAwB;IAAAiC,OAAA,EAAxBjC,wBAAwB,CAAAkC,IAAA;IAAAC,UAAA,EAFvB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}