{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TableSearchFilterPipe {\n  transform(value, args) {\n    if (!value) return null;\n    if (!args) return value;\n    args = args.toLowerCase();\n    return value.filter(function (item) {\n      return JSON.stringify(item).toLowerCase().includes(args);\n    });\n  }\n  static #_ = this.ɵfac = function TableSearchFilterPipe_Factory(t) {\n    return new (t || TableSearchFilterPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"tableSearchFilter\",\n    type: TableSearchFilterPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["TableSearchFilterPipe","transform","value","args","toLowerCase","filter","item","JSON","stringify","includes","_","_2","pure"],"sources":["D:\\Projects\\Kaushal_Darpan_App\\Kaushal_Darpan_Application\\src\\app\\Pipes\\table-search-filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'tableSearchFilter'\r\n})\r\nexport class TableSearchFilterPipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    \r\n    if (!value) return null;\r\n    if (!args) return value;\r\n\r\n    args = args.toLowerCase();\r\n     \r\n\r\n    return value.filter(function (item: any) {\r\n      return JSON.stringify(item) \r\n        .toLowerCase()\r\n        .includes(args);\r\n    });\r\n  }\r\n}\r\n"],"mappings":";AAKA,OAAM,MAAOA,qBAAqB;EAEhCC,SAASA,CAACC,KAAU,EAAEC,IAAU;IAE9B,IAAI,CAACD,KAAK,EAAE,OAAO,IAAI;IACvB,IAAI,CAACC,IAAI,EAAE,OAAOD,KAAK;IAEvBC,IAAI,GAAGA,IAAI,CAACC,WAAW,EAAE;IAGzB,OAAOF,KAAK,CAACG,MAAM,CAAC,UAAUC,IAAS;MACrC,OAAOC,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CACxBF,WAAW,EAAE,CACbK,QAAQ,CAACN,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ;EAAC,QAAAO,CAAA,G;qBAfUV,qBAAqB;EAAA;EAAA,QAAAW,EAAA,G;;UAArBX,qBAAqB;IAAAY,IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}