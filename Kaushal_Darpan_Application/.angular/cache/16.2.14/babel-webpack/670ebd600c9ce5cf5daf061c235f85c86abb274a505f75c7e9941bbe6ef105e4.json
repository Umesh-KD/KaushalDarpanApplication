{"ast":null,"code":"import _asyncToGenerator from \"D:/Projects/Kaushal_Darpan_App/Kaushal_Darpan_Application/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../Common/appsetting.service\";\nexport class CampusPostService {\n  constructor(http, appsettingConfig) {\n    this.http = http;\n    this.appsettingConfig = appsettingConfig;\n    this.APIUrl = this.appsettingConfig.apiURL + \"CampusPostMaster\";\n    this.headersOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      })\n    };\n  }\n  extractData(res) {\n    return res;\n  }\n  handleErrorObservable(error) {\n    return throwError(error);\n  }\n  //Get \n  GetAllData() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return yield _this.http.get(_this.APIUrl + \"/GetAllData\", _this.headersOptions).pipe(catchError(_this.handleErrorObservable)).toPromise();\n    })();\n  }\n  GetByID(PK_ID) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return yield _this2.http.get(_this2.APIUrl + \"/GetByID/\" + PK_ID, _this2.headersOptions).pipe(catchError(_this2.handleErrorObservable)).toPromise();\n    })();\n  }\n  SaveData(request) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const body = JSON.stringify(request);\n      return yield _this3.http.post(_this3.APIUrl + '/SaveData', body, _this3.headersOptions).pipe(catchError(_this3.handleErrorObservable)).toPromise();\n    })();\n  }\n  DeleteDataByID(PK_ID, ModifyBy) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return yield _this4.http.delete(_this4.APIUrl + '/DeleteDataByID/' + PK_ID + \"/\" + ModifyBy, _this4.headersOptions).pipe(catchError(_this4.handleErrorObservable)).toPromise();\n    })();\n  }\n  Save_CampusValidation_NodalAction(request) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const body = JSON.stringify(request);\n      return yield _this5.http.post(_this5.APIUrl + \"/Save_CampusValidation_NodalAction\", body, _this5.headersOptions).pipe(catchError(_this5.handleErrorObservable)).toPromise();\n    })();\n  }\n  //CampusValidationList/{CollegeID}/{Status}\n  CampusValidationList(CompanyID, CollegeID, Status) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      return yield _this6.http.get(_this6.APIUrl + \"/CampusValidationList\" + \"/\" + CompanyID + \"/\" + CollegeID + \"/\" + Status, _this6.headersOptions).pipe(catchError(_this6.handleErrorObservable)).toPromise();\n    })();\n  }\n  static #_ = this.ɵfac = function CampusPostService_Factory(t) {\n    return new (t || CampusPostService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AppsettingService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CampusPostService,\n    factory: CampusPostService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","throwError","catchError","CampusPostService","constructor","http","appsettingConfig","APIUrl","apiURL","headersOptions","headers","localStorage","getItem","extractData","res","handleErrorObservable","error","GetAllData","_this","_asyncToGenerator","get","pipe","toPromise","GetByID","PK_ID","_this2","SaveData","request","_this3","body","JSON","stringify","post","DeleteDataByID","ModifyBy","_this4","delete","Save_CampusValidation_NodalAction","_this5","CampusValidationList","CompanyID","CollegeID","Status","_this6","_","i0","ɵɵinject","i1","HttpClient","i2","AppsettingService","_2","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\Kaushal_Darpan_App\\Kaushal_Darpan_Application\\src\\app\\Services\\CampusPost\\campus-post.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { CampusPostMasterModel, CampusPostMaster_Action, CampusPostMaster_EligibilityCriteriaModel } from '../../Models/CampusPostDataModel';\r\nimport { GlobalConstants } from '../../Common/GlobalConstants';\r\nimport { AppsettingService } from '../../Common/appsetting.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CampusPostService {\r\n  readonly APIUrl = this.appsettingConfig.apiURL + \"CampusPostMaster\";\r\n  readonly headersOptions: any;\r\n  constructor(private http: HttpClient, private appsettingConfig: AppsettingService) {\r\n    this.headersOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n      })\r\n    };\r\n  }\r\n  extractData(res: Response) {\r\n    return res;\r\n  }\r\n  handleErrorObservable(error: Response | any) {\r\n    return throwError(error);\r\n  }\r\n  //Get \r\n  public async GetAllData() {\r\n    return await this.http.get(this.APIUrl + \"/GetAllData\", this.headersOptions)\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n  public async GetByID(PK_ID: number) {\r\n    return await this.http.get(this.APIUrl + \"/GetByID/\" + PK_ID, this.headersOptions)\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n  public async SaveData(request: CampusPostMasterModel) {\r\n\r\n    const body = JSON.stringify(request);\r\n    return await this.http.post(this.APIUrl + '/SaveData', body, this.headersOptions)\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n  public async DeleteDataByID(PK_ID: number, ModifyBy: number) {\r\n\r\n    return await this.http.delete(this.APIUrl + '/DeleteDataByID/' + PK_ID + \"/\" + ModifyBy, this.headersOptions)\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n  public async Save_CampusValidation_NodalAction(request: CampusPostMaster_Action) {\r\n    const body = JSON.stringify(request);\r\n    return await this.http.post(this.APIUrl + \"/Save_CampusValidation_NodalAction\", body, this.headersOptions)\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n\r\n  //CampusValidationList/{CollegeID}/{Status}\r\n  public async CampusValidationList(CompanyID: number, CollegeID: number, Status: string) {\r\n    return await this.http.get(this.APIUrl + \"/CampusValidationList\" + \"/\" + CompanyID + \"/\" + CollegeID + \"/\" + Status, this.headersOptions)\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n\r\n\r\n\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}