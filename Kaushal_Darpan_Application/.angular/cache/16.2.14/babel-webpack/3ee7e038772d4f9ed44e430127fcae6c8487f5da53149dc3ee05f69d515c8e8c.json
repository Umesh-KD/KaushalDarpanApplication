{"ast":null,"code":"import _asyncToGenerator from \"D:/Projects/Kaushal_Darpan_App/Kaushal_Darpan_Application/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../Common/appsetting.service\";\n// import { UserRoleRightsDataModel } from '../../Models/RoleMasterDataModel';\n// import {  UserRoleRightsDataModel } from '../../Models/AddRoleMasterDataModel';\nexport class AddRoleMasterService {\n  constructor(http, appsettingConfig) {\n    this.http = http;\n    this.appsettingConfig = appsettingConfig;\n    this.APIUrl = this.appsettingConfig.apiURL + \"AddRoleMaster\";\n  }\n  extractData(res) {\n    return res;\n  }\n  handleErrorObservable(error) {\n    return throwError(error);\n  }\n  //Get \n  GetList(UserID) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return yield _this.http.get(_this.APIUrl + \"/\" + UserID).pipe(catchError(_this.handleErrorObservable)).toPromise();\n    })();\n  }\n  GetByID(RoleID, UserID) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return yield _this2.http.get(_this2.APIUrl + \"/\" + RoleID + \"/\" + UserID).pipe(catchError(_this2.handleErrorObservable)).toPromise();\n    })();\n  }\n  SaveData(request) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const headers = {\n        'content-type': 'application/json'\n      };\n      const body = JSON.stringify(request);\n      return yield _this3.http.post(_this3.APIUrl, body, {\n        'headers': headers\n      }).pipe(catchError(_this3.handleErrorObservable)).toPromise();\n    })();\n  }\n  DeleteData(RoleID, UserID) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return yield _this4.http.post(_this4.APIUrl + '/Delete/' + RoleID + \"/\" + UserID, httpOptions).pipe(catchError(_this4.handleErrorObservable)).toPromise();\n    })();\n  }\n  SaveUserRightData(request) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const headers = {\n        'content-type': 'application/json'\n      };\n      const body = JSON.stringify(request);\n      return yield _this5.http.post(_this5.APIUrl + \"/SaveUserRoleRight\", body, {\n        'headers': headers\n      }).pipe(catchError(_this5.handleErrorObservable)).toPromise();\n    })();\n  }\n  static #_ = this.ɵfac = function AddRoleMasterService_Factory(t) {\n    return new (t || AddRoleMasterService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AppsettingService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AddRoleMasterService,\n    factory: AddRoleMasterService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","throwError","catchError","AddRoleMasterService","constructor","http","appsettingConfig","APIUrl","apiURL","extractData","res","handleErrorObservable","error","GetList","UserID","_this","_asyncToGenerator","httpOptions","headers","get","pipe","toPromise","GetByID","RoleID","_this2","SaveData","request","_this3","body","JSON","stringify","post","DeleteData","_this4","SaveUserRightData","_this5","_","i0","ɵɵinject","i1","HttpClient","i2","AppsettingService","_2","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\Kaushal_Darpan_App\\Kaushal_Darpan_Application\\src\\app\\Services\\RoleMaster\\add-role-master.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError} from 'rxjs/operators';\r\nimport { RoleMasterDataModel, UserRoleRightsDataModel } from '../../Models/RoleMasterDataModel';\r\nimport { GlobalConstants } from '../../Common/GlobalConstants';\r\nimport { AppsettingService } from '../../Common/appsetting.service';\r\n\r\n// import { UserRoleRightsDataModel } from '../../Models/RoleMasterDataModel';\r\n// import {  UserRoleRightsDataModel } from '../../Models/AddRoleMasterDataModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddRoleMasterService {\r\n  readonly APIUrl = this.appsettingConfig.apiURL + \"AddRoleMaster\";\r\n  constructor(private http: HttpClient, private appsettingConfig: AppsettingService) { }\r\n  extractData(res: Response) {\r\n    return res;\r\n  }\r\n  handleErrorObservable(error: Response | any) {\r\n    return throwError(error);\r\n  }\r\n  //Get \r\n  public async GetList(UserID: number) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    return await this.http.get(this.APIUrl + \"/\" + UserID)\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n  public async GetByID(RoleID: number, UserID: number) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    return await this.http.get(this.APIUrl + \"/\" + RoleID + \"/\" + UserID)\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n  public async SaveData(request: RoleMasterDataModel) {\r\n    const headers = { 'content-type': 'application/json' }\r\n    const body = JSON.stringify(request);\r\n    return await this.http.post(this.APIUrl, body, { 'headers': headers })\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n  public async DeleteData(RoleID: number, UserID: number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n\r\n    return await this.http.post(this.APIUrl + '/Delete/' + RoleID + \"/\" + UserID, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n  public async SaveUserRightData(request: UserRoleRightsDataModel[]) {\r\n    const headers = { 'content-type': 'application/json' }\r\n    const body = JSON.stringify(request);\r\n    return await this.http.post(this.APIUrl +\"/SaveUserRoleRight\", body, { 'headers': headers })\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}