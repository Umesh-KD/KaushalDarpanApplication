{"ast":null,"code":"import _asyncToGenerator from \"D:/Projects/Kaushal_Darpan_App/Kaushal_Darpan_Application/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { throwError, catchError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../Common/appsetting.service\";\nexport class AdminDashboardDataService {\n  constructor(http, appsettingConfig) {\n    this.http = http;\n    this.appsettingConfig = appsettingConfig;\n    this.APIUrl = this.appsettingConfig.apiURL + \"AdminDashboard\";\n    this.headersOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      })\n    };\n  }\n  extractData(res) {\n    return res;\n  }\n  handleErrorObservable(error) {\n    return throwError(error);\n  }\n  GetAdminDashData() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return yield _this.http.get(_this.APIUrl + \"/GetAdminDashData\", _this.headersOptions).pipe(catchError(_this.handleErrorObservable)).toPromise();\n    })();\n  }\n  static #_ = this.ɵfac = function AdminDashboardDataService_Factory(t) {\n    return new (t || AdminDashboardDataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AppsettingService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdminDashboardDataService,\n    factory: AdminDashboardDataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","throwError","catchError","AdminDashboardDataService","constructor","http","appsettingConfig","APIUrl","apiURL","headersOptions","headers","localStorage","getItem","extractData","res","handleErrorObservable","error","GetAdminDashData","_this","_asyncToGenerator","get","pipe","toPromise","_","i0","ɵɵinject","i1","HttpClient","i2","AppsettingService","_2","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\Kaushal_Darpan_App\\Kaushal_Darpan_Application\\src\\app\\Services\\AdminDashboard\\admin-dashboard-data.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { throwError, catchError } from 'rxjs';\r\nimport { AppsettingService } from '../../Common/appsetting.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminDashboardDataService {\r\n\r\n  readonly APIUrl = this.appsettingConfig.apiURL + \"AdminDashboard\";\r\n  readonly headersOptions: any;\r\n  constructor(private http: HttpClient, private appsettingConfig: AppsettingService) {\r\n    this.headersOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n      })\r\n    };\r\n  }\r\n  extractData(res: Response) {\r\n    return res;\r\n  }\r\n  handleErrorObservable(error: Response | any) {\r\n    return throwError(error);\r\n  }\r\n  public async GetAdminDashData() {\r\n    return await this.http.get(this.APIUrl + \"/GetAdminDashData\", this.headersOptions)\r\n      .pipe(\r\n        catchError(this.handleErrorObservable)\r\n      ).toPromise();\r\n  }\r\n\r\n}\r\n"],"mappings":";AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,UAAU,EAAEC,UAAU,QAAQ,MAAM;;;;AAM7C,OAAM,MAAOC,yBAAyB;EAIpCC,YAAoBC,IAAgB,EAAUC,gBAAmC;IAA7D,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAFrD,KAAAC,MAAM,GAAG,IAAI,CAACD,gBAAgB,CAACE,MAAM,GAAG,gBAAgB;IAG/D,IAAI,CAACC,cAAc,GAAG;MACpBC,OAAO,EAAE,IAAIV,WAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAAS,GAAGW,YAAY,CAACC,OAAO,CAAC,WAAW;OAC9D;KACF;EACH;EACAC,WAAWA,CAACC,GAAa;IACvB,OAAOA,GAAG;EACZ;EACAC,qBAAqBA,CAACC,KAAqB;IACzC,OAAOf,UAAU,CAACe,KAAK,CAAC;EAC1B;EACaC,gBAAgBA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC3B,aAAaD,KAAI,CAACb,IAAI,CAACe,GAAG,CAACF,KAAI,CAACX,MAAM,GAAG,mBAAmB,EAAEW,KAAI,CAACT,cAAc,CAAC,CAC/EY,IAAI,CACHnB,UAAU,CAACgB,KAAI,CAACH,qBAAqB,CAAC,CACvC,CAACO,SAAS,EAAE;IAAC;EAClB;EAAC,QAAAC,CAAA,G;qBAvBUpB,yBAAyB,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,iBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAzB3B,yBAAyB;IAAA4B,OAAA,EAAzB5B,yBAAyB,CAAA6B,IAAA;IAAAC,UAAA,EAFxB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}